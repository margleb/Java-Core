/*
*  Модификатор strictfp (strict floating point) применяется к классам, интерфейсам и методам, и гарантирует соответствие всех операций на числах с плавающей точкой стандарту IEEE 754.
*  При использовании данного модификатора Вы получите одинаковое поведение в ходе манипуляций с числами с плавающей точкой на всех платформах.
*
*  Абстрактный класс в Java похож на интерфейс за исключением того, что он может содержать реализацию метода по умолчанию.
*  Абстрактный класс может иметь абстрактный метод без тела, а также может иметь методы с реализацией.
*
*  Ключевое слово abstract используется для создания абстрактного класса и метода. Абстрактный класс в Java не может быть инициализирован
*  Абстрактный класс в основном используется для предоставления базы подклассам для расширения и реализации абстрактных методов и переопределения или использования реализованных методов в абстрактном классе.
*
* Интерфейс — это абстрактный класс, у которого НИ ОДИН метод не реализован, все они публичные и нет переменных класса.
*
* final class не могут быть наследоваться
*
* abstract final не могут использоватся в одном классе!!
*
*/

strictfp class ExampleClass {

    void method(float f) {
        f = 0.23f;
    }
}

abstract class Car {

    int speed;
    // не знаем как он резализуется,
    // но в классах наследниках надо будет его определить
    abstract void Run();

    void Stop() {
        speed = 0;
    }
}

class Ferrary extends Car {

    @Override
    void Run() {
        speed = 25;
    }
}

// абстрактные классы могут наследоваться
abstract class Ball extends ExampleClass {

}

// финальные классы нельзя наследовать и переопределять
final class MyFinalClass {
    void someLogin() {

    }
}

// class ExtendsFinalClass extends MyFinalClass {
//}